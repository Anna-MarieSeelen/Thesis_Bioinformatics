#!/usr/bin/env python3
"""
Author: Anna-Marie Seelen
Studentnumber:1008970
Description: run MS2Query
Usage: python3 *name_of_script* *path_to_file_with_MS2Query_csv* *path_file_with_MS2LDA_csv*
    name_of_script: MS2Query.py
    path_folder_input: Define the folder in which your query spectra are stored. Accepted formats are: "mzML", "json",
    "mgf", "msp", "mzxml", "usi" or a pickled matchms object. The results generated by MS2Query, are stored as csv files
    in a results directory within the same directory as your query spectra.
    path_folder_library_files: Set the location where all your downloaded MS2Query libraries are stored
"""
# import statements
from sys import argv
import pandas as pd
import re
import subprocess
import os.path
from ms2query.run_ms2query import download_default_models, default_library_file_base_names, run_complete_folder
from ms2query.ms2library import create_library_object_from_one_dir

# functions
def parsing_MS2Query_csv(path_to_file_with_MS2Query_csv):
    df_MS2Query = pd.read_csv(path_to_file_with_MS2Query_csv)
    df_MS2LDA = pd.read_csv(path_file_with_MS2LDA_csv)
    #add Mass2Motifs with overlapscore higher than, and prob higher than...
    #filter MS2_Query prediction > 0.8
    #

    new_df=df_MS2Query[["col1"]]

def to_output_tab_file(alignment_list): #this should be csv format, not done yet
    """Takes a nested sorted list and outputs a tab delimited file

    alignment_list: nested list with families and alignment lenghts
    return: tab delimited text file with the contents of each sub list on a line
    """
    tab_file=open("out_tab_delimited.txt", "w")
    for sub_list in alignment_list:
        tab_file.write("{0}\t{1}\t{2}".format(sub_list[0], sub_list[1], sub_list[2]))
        tab_file.write("\n")
    return None

def main() -> None:
    """Main function of this module"""
    # step 1: parse MS2Query file
    path_to_file_with_MS2Query_csv= argv[1]
    # step 2: parse MS2LDA file
    path_file_with_MS2LDA_csv = argv[2]
    # stept 3: put relevant info in new document
    ms2query(path_folder_input_files, path_folder_library_files)

if __name__ == "__main__":
    main()